add_test([=[ResultTest.SimpleTest]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=ResultTest.SimpleTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ResultTest.SimpleTest]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.RegisterComponentSuccess]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.RegisterComponentSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.RegisterComponentSuccess]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.RegisterComponentEmptyId]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.RegisterComponentEmptyId]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.RegisterComponentEmptyId]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.RegisterComponentDuplicateId]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.RegisterComponentDuplicateId]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.RegisterComponentDuplicateId]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.GetStateExistingComponent]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.GetStateExistingComponent]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.GetStateExistingComponent]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.GetStateNonExistentComponent]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.GetStateNonExistentComponent]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.GetStateNonExistentComponent]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.UpdateStateValidTransition]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.UpdateStateValidTransition]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.UpdateStateValidTransition]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.UpdateStateInvalidTransition]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.UpdateStateInvalidTransition]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.UpdateStateInvalidTransition]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.UpdateStateToErrorSetsMessage]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.UpdateStateToErrorSetsMessage]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.UpdateStateToErrorSetsMessage]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.UpdateStateFromErrorRetainsMessage]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.UpdateStateFromErrorRetainsMessage]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.UpdateStateFromErrorRetainsMessage]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.UpdateMetricsSuccess]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.UpdateMetricsSuccess]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.UpdateMetricsSuccess]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.IsHealthyAllValid]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.IsHealthyAllValid]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.IsHealthyAllValid]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.IsHealthyWithInvalidComponent]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.IsHealthyWithInvalidComponent]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.IsHealthyWithInvalidComponent]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.IsHealthyNoComponents]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.IsHealthyNoComponents]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.IsHealthyNoComponents]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[StateManagerTest.UpdateStateToErrorWithoutMessage]=]  [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/bin/Release/trade_ngin_tests.exe]==] [==[--gtest_filter=StateManagerTest.UpdateStateToErrorWithoutMessage]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[StateManagerTest.UpdateStateToErrorWithoutMessage]=]  PROPERTIES WORKING_DIRECTORY [==[C:/Users/kbott/OneDrive/Desktop/School/UF Algo Fund/trade-ngin-rebuild/trade-ngin/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  trade_ngin_tests_TESTS ResultTest.SimpleTest StateManagerTest.RegisterComponentSuccess StateManagerTest.RegisterComponentEmptyId StateManagerTest.RegisterComponentDuplicateId StateManagerTest.GetStateExistingComponent StateManagerTest.GetStateNonExistentComponent StateManagerTest.UpdateStateValidTransition StateManagerTest.UpdateStateInvalidTransition StateManagerTest.UpdateStateToErrorSetsMessage StateManagerTest.UpdateStateFromErrorRetainsMessage StateManagerTest.UpdateMetricsSuccess StateManagerTest.IsHealthyAllValid StateManagerTest.IsHealthyWithInvalidComponent StateManagerTest.IsHealthyNoComponents StateManagerTest.UpdateStateToErrorWithoutMessage)
